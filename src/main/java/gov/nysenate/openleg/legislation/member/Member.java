package gov.nysenate.openleg.legislation.member;

import com.google.common.base.Objects;
import gov.nysenate.openleg.legislation.committee.Chamber;

/**
 * Represents a person holding a specific office
 */
public class Member {

    private final Person person;

    /** Unique member id generated by the persistence layer. */
    private final int memberId;

    /** The legislative chamber this member is associated with. */
    private final Chamber chamber;

    /** Indicates if the member is currently an incumbent. */
    private final boolean incumbent;

    public Member(Person person, int memberId, Chamber chamber, boolean incumbent) {
        this.person = person;
        this.memberId = memberId;
        this.chamber = chamber;
        this.incumbent = incumbent;
    }

    public Member(Member member) {
        this.person = member.person;
        this.memberId = member.memberId;
        this.chamber = member.chamber;
        this.incumbent = member.incumbent;
    }

    /** --- Overrides --- */

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Member member)) return false;
        return Objects.equal(person, member.person) &&
                memberId == member.memberId &&
                chamber == member.chamber &&
                incumbent == member.incumbent;
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(person.hashCode(), memberId, chamber, incumbent);
    }

    /** --- Getters / Setters --- */

    public Person getPerson() {
        return person;
    }

    public int getMemberId() {
        return memberId;
    }

    public Chamber getChamber() {
        return chamber;
    }

    public boolean isIncumbent() {
        return this.incumbent;
    }
}
